# =====================================
# DALTHAUS PHOTOGRAPHY CMS - NGINX CONFIG
# Production Configuration for Ports 80/443
# =====================================

# HTTP Server Block - Port 80 (Redirects to HTTPS)
server {
    listen 80;
    listen [::]:80;
    server_name yourdomain.com www.yourdomain.com;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS Server Block - Port 443
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name yourdomain.com www.yourdomain.com;
    root /var/www/html/dalthaus;  # Update this path
    index index.php index.html;
    
    # =====================================
    # SSL CONFIGURATION
    # =====================================
    ssl_certificate /etc/ssl/certs/yourdomain.crt;      # Update path
    ssl_certificate_key /etc/ssl/private/yourdomain.key; # Update path
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # SSL session caching
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/ssl/certs/yourdomain.crt; # Update path
    
    # =====================================
    # SECURITY HEADERS
    # =====================================
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' cdn.jsdelivr.net cdn.tiny.cloud; style-src 'self' 'unsafe-inline' fonts.googleapis.com cdn.jsdelivr.net; font-src 'self' fonts.gstatic.com; img-src 'self' data: blob: https:; connect-src 'self'; frame-src 'self'; object-src 'none'; base-uri 'self'; form-action 'self';" always;
    
    # =====================================
    # LOGGING
    # =====================================
    access_log /var/log/nginx/dalthaus_access.log;
    error_log /var/log/nginx/dalthaus_error.log;
    
    # =====================================
    # FILE UPLOAD LIMITS
    # =====================================
    client_max_body_size 32M;
    client_body_buffer_size 128k;
    
    # =====================================
    # GZIP COMPRESSION
    # =====================================
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml text/x-js text/x-cross-domain-policy application/x-font-ttf application/x-font-opentype application/vnd.ms-fontobject font/woff font/woff2;
    gzip_disable "MSIE [1-6]\.";
    
    # =====================================
    # PROTECT SENSITIVE FILES
    # =====================================
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(ini|log|sh|sql|md|json|lock)$ {
        deny all;
    }
    
    location = /setup.php {
        deny all;
    }
    
    location = /router.php {
        deny all;
    }
    
    # =====================================
    # PROTECT DIRECTORIES
    # =====================================
    location ~ ^/(includes|scripts|logs|cache|temp|vendor)/ {
        deny all;
        return 403;
    }
    
    # =====================================
    # STATIC FILE CACHING
    # =====================================
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    location ~* \.(css|js)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    location ~* \.(woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # =====================================
    # PHP HANDLING
    # =====================================
    location / {
        try_files $uri $uri/ /index.php?route=$uri&$args;
    }
    
    location ~ \.php$ {
        # Prevent PHP execution in uploads directory
        location ~ /uploads/.*\.php$ {
            deny all;
        }
        
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        
        # PHP-FPM Configuration
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock; # Update PHP version
        # Or use TCP: fastcgi_pass 127.0.0.1:9000;
        
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        
        # PHP-FPM settings
        fastcgi_buffer_size 128k;
        fastcgi_buffers 256 4k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_intercept_errors on;
        
        # Security headers for PHP responses
        fastcgi_param PHP_VALUE "
            display_errors=Off
            log_errors=On
            error_log=/var/log/php/error.log
            max_execution_time=60
            max_input_time=60
            memory_limit=128M
            post_max_size=32M
            upload_max_filesize=10M
            session.cookie_httponly=1
            session.use_only_cookies=1
            session.cookie_secure=1
        ";
    }
    
    # =====================================
    # ERROR PAGES
    # =====================================
    error_page 400 /public/error.php?code=400;
    error_page 401 /public/error.php?code=401;
    error_page 403 /public/error.php?code=403;
    error_page 404 /public/error.php?code=404;
    error_page 500 502 503 504 /public/error.php?code=500;
    
    # =====================================
    # RATE LIMITING
    # Define in http block of main nginx.conf:
    # limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    # limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    # =====================================
    
    # Apply rate limiting to general requests
    location / {
        limit_req zone=general burst=20 nodelay;
        try_files $uri $uri/ /index.php?route=$uri&$args;
    }
    
    # Stricter rate limiting for login
    location = /admin/login.php {
        limit_req zone=login burst=5 nodelay;
        try_files $uri =404;
        include fastcgi_params;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
    }
    
    # =====================================
    # OPTIONAL: WWW REDIRECT
    # =====================================
    # Uncomment to force www
    # if ($host !~* ^www\.) {
    #     return 301 https://www.$host$request_uri;
    # }
    
    # Uncomment to force non-www
    # if ($host ~* ^www\.) {
    #     return 301 https://$1$request_uri;
    # }
}